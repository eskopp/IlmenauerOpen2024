name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        run: |
          sudo apt-get update
          sudo apt-get install -y golang

      - name: Install Python
        run: |
          sudo apt-get install -y python3 python3-pip

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Get Latest Hugo Version
        id: hugo_version
        run: |
          latest_version=$(curl --silent "https://api.github.com/repos/gohugoio/hugo/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([0-9]+\.[0-9]+\.[0-9]+).*/\1/')

          minimum_version=0.124.0

          if [ "$(printf '%s\n' "$minimum_version" "$latest_version" | sort -V | head -n1)" = "$minimum_version" ]; then
            echo "Using latest version: $latest_version"
          else
            echo "Using minimum version: $minimum_version"
            latest_version=$minimum_version
          fi

          echo "Hugo version to install: $latest_version"
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Install Latest Hugo
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v${{ env.latest_version }}/hugo_${{ env.latest_version }}_Linux-64bit.tar.gz
          tar -xzf hugo_${{ env.latest_version }}_Linux-64bit.tar.gz
          sudo mv hugo /usr/local/bin/

      - name: Cache Hugo Modules
        uses: actions/cache@v4
        with:
          path: .hugo_mod/cache
          key: ${{ runner.os }}-hugo-mod-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-hugo-mod-

      - name: Clean Public Directory
        run: rm -rf public

      - name: Hugo Dependencies
        run: hugo mod get

      - name: Build Hugo
        run: hugo

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
